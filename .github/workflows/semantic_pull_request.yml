name: 'Semantic Pull Request'

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize

permissions:
  pull-requests: write

jobs:
  main:
    name: Validate PR title
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    steps:
      - uses: amannn/action-semantic-pull-request@v6
        id: lint_pr_title
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Configure which types are allowed (based on semantic-release config)
          types: |
            build
            chore
            ci
            docs
            feat
            fix
            perf
            style
            refactor
            test
          # Configure that the subject doesn't start with uppercase
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            should start with a lowercase letter. Please ensure that the subject
            follows conventional commit format.

      # Comment with helpful error message when validation fails
      - uses: marocchino/sticky-pull-request-comment@v2
        if: always() && (steps.lint_pr_title.outputs.error_message != null)
        with:
          header: pr-title-lint-error
          message: |
            Hey there and thank you for opening this pull request! üëãüèº

            We require pull request titles to follow the [Conventional Commits specification](https://www.conventionalcommits.org/en/v1.0.0/) and it looks like your proposed title needs to be adjusted.

            **Allowed commit types:**
            - `feat:` - A new feature
            - `fix:` - A bug fix
            - `docs:` - Documentation only changes
            - `style:` - Changes that do not affect the meaning of the code
            - `refactor:` - A code change that neither fixes a bug nor adds a feature
            - `perf:` - A code change that improves performance
            - `test:` - Adding missing tests or correcting existing tests
            - `build:` - Changes that affect the build system or external dependencies
            - `ci:` - Changes to CI configuration files and scripts
            - `chore:` - Other changes that don't modify src or test files

            **Examples of valid titles:**
            - `feat: add user authentication`
            - `fix: resolve memory leak in data processing`
            - `docs: update API documentation`
            - `refactor: improve code organization`

            **Error details:**
            ```
            ${{ steps.lint_pr_title.outputs.error_message }}
            ```

      # Delete the comment when the issue has been resolved
      - if: ${{ steps.lint_pr_title.outputs.error_message == null }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: pr-title-lint-error
          delete: true
